<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Natjohan</title><link href="http://natjohan.info/" rel="alternate"></link><link href="http://natjohan.info/feeds/tag.inotify.xml" rel="self"></link><id>http://natjohan.info/</id><updated>2013-06-09T23:07:00+02:00</updated><entry><title>Tip of the week 19</title><link href="http://natjohan.info/tip-of-the-week-19.html" rel="alternate"></link><updated>2013-06-09T23:07:00+02:00</updated><author><name>natjohan</name></author><id>tag:natjohan.info,2013-06-09:tip-of-the-week-19.html</id><summary type="html">&lt;img alt="/images/monitor_file.png" src="/images/monitor_file.png" /&gt;
&lt;div class="section" id="monitor-file-changes-to-trigger-an-action"&gt;
&lt;h2&gt;Monitor file changes to trigger an action&lt;/h2&gt;
&lt;div class="section" id="incron"&gt;
&lt;h3&gt;Incron&lt;/h3&gt;
&lt;p&gt;According to the man incron is &lt;em&gt;an &amp;quot;inotify cron&amp;quot; system. It consists of a daemon and a table manipulator. You can use it a similar way as the regular cron. The difference is that the inotify cron handles filesystem events rather than time periods.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Just install the following package with your favorite package installer (yum for Fedora, aptitude for Debian/ubuntu, pacman or yaourt for archlinux)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;natjohan# yum install incron&lt;/span&gt;
&lt;span class="go"&gt;natjohan# rpm -ql incron&lt;/span&gt;
&lt;span class="go"&gt;        /etc/incron.conf&lt;/span&gt;
&lt;span class="go"&gt;        /etc/incron.d&lt;/span&gt;
&lt;span class="go"&gt;        /usr/bin/incrontab&lt;/span&gt;
&lt;span class="go"&gt;        /usr/lib/systemd/system/incrond.service&lt;/span&gt;
&lt;span class="go"&gt;        /usr/sbin/incrond&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10/CHANGELOG&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10/COPYING&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10/LICENSE-GPL&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10/README&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/doc/incron-0.5.10/TODO&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/man/man1/incrontab.1.gz&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/man/man5/incron.conf.5.gz&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/man/man5/incrontab.5.gz&lt;/span&gt;
&lt;span class="go"&gt;        /usr/share/man/man8/incrond.8.gz&lt;/span&gt;
&lt;span class="go"&gt;        /var/spool/incron&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Main files are :&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;/etc/incron.conf : main incron configuration file&lt;/li&gt;
&lt;li&gt;/etc/incron.allow : contains users allowed to use incron, you have to create it&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;At first you have to create &lt;cite&gt;/etc/incron.allow&lt;/cite&gt; , for example (to allow root to use incron)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;root&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The incron syntax is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;file&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="err"&gt;directory&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;event&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;command&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;options&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Events are the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;IN_ACCESS File was accessed (read) (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_ATTRIB Metadata changed (permissions, timestamps, extended attributes, etc.) (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_CLOSE_WRITE File opened for writing was closed (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_CLOSE_NOWRITE File not opened for writing was closed (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_CREATE File/directory created in watched directory (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_DELETE File/directory deleted from watched directory (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_DELETE_SELF Watched file/directory was itself deleted&lt;/span&gt;
&lt;span class="go"&gt;IN_MODIFY File was modified (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_MOVE_SELF Watched file/directory was itself moved&lt;/span&gt;
&lt;span class="go"&gt;IN_MOVED_FROM File moved out of watched directory (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_MOVED_TO File moved into watched directory (*)&lt;/span&gt;
&lt;span class="go"&gt;IN_OPEN File was opened (*)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is som wildcard you can use in your command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;dollar sign
&lt;span class="gp"&gt;$&lt;/span&gt;@ watched filesystem path &lt;span class="o"&gt;(&lt;/span&gt;see above&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt;&lt;span class="c"&gt;# event-related file name&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt;% event flags &lt;span class="o"&gt;(&lt;/span&gt;textually&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt;&amp;amp; event flags &lt;span class="o"&gt;(&lt;/span&gt;numerically&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can chose a file to trigger (here, we just want to restart the freeradius service when the user file changes), and add an entry in your incron with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;natjohan# incrontab -e&lt;/span&gt;

&lt;span class="go"&gt;/etc/freeradius/users IN_CLOSE_WRITE, NO_LOOP /etc/init.d/freeradius restart&lt;/span&gt;

&lt;span class="go"&gt;natjohan# incrontab -l&lt;/span&gt;
&lt;span class="go"&gt;/etc/freeradius/users IN_CLOSE_WRITE, NO_LOOP /etc/init.d/freeradius restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;strong&gt;Note :&lt;/strong&gt; On Fedora 18, if you don't have vim installed, the &lt;cite&gt;incrontab -e&lt;/cite&gt; output an error message &lt;cite&gt;editor finished with error: No such file or directory&lt;/cite&gt; which mean you just have to edit  &lt;cite&gt;/etc/incron.conf&lt;/cite&gt; with &lt;cite&gt;editor = vi&lt;/cite&gt; in or install vim&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="tip"&gt;
&lt;h3&gt;Tip&lt;/h3&gt;
&lt;p&gt;Incron does not allow to monitor a file several times (one line per file/folder only), so if you want to launch many commands, the cleanest way to do it is to create a bash file with your commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;natjohan# incrontab -e&lt;/span&gt;

&lt;span class="go"&gt;/etc/freeradius/users IN_CLOSE_WRITE, NO_LOOP myscript&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="go-further"&gt;
&lt;h3&gt;Go further&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;official &lt;a class="reference external" href="http://inotify.aiken.cz/"&gt;website&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://linux.die.net/man/5/incrontab"&gt;RTFM&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="linux"></category><category term="incron"></category><category term="inotify"></category><category term="file"></category></entry></feed>